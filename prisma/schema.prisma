// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Invoice {
  id         String   @id
  dueDate    DateTime
  person     Person   @relation(fields: [personId], references: [id])
  billFrom   BillFrom @relation(fields: [billFromId], references: [id])
  personName String
  amount     Float
  status     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  item       Item[]
  userId     String
  personId   String
  billFromId String

  @@index([billFromId])
  @@index([userId])
  @@index([personId])
}

model Item {
  id        String   @id @default(cuid())
  name      String
  quantity  Int
  price     Float
  Invoice   Invoice? @relation(fields: [invoiceId], references: [id])
  invoiceId String?

  @@index([invoiceId])
}

model BillFrom {
  id       String @id @default(cuid())
  address  String
  city     String
  postcode String
  country  String

  Invoice Invoice[]
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  invoices      Invoice[]
}

model Person {
  id       String    @id @default(cuid())
  name     String
  email    String    @unique
  address  String
  city     String
  postcode String
  country  String
  Invoice  Invoice[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
